name: Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: '.bun-version'

      - name: Get version from package.json
        id: get_version
        shell: bash
        run: |
          echo "version=$(bun --eval \"console.log(require('./package.json').version)\")" >> "$GITHUB_OUTPUT"

      - name: Check if git tag exists
        id: tag_check
        shell: bash
        run: |
          git fetch --tags --force
          if git rev-parse -q --verify "refs/tags/v${{ steps.get_version.outputs.version }}"; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Nothing to release (tag already exists)
        if: steps.tag_check.outputs.exists == 'true'
        run: echo "Tag v${{ steps.get_version.outputs.version }} already exists. Nothing to release."

      - name: Install dependencies
        if: steps.tag_check.outputs.exists == 'false'
        run: bun install --frozen-lockfile

      - name: Build (node target)
        if: steps.tag_check.outputs.exists == 'false'
        run: bun build src/index.ts --outdir dist --target node

      - name: Commit built dist
        if: steps.tag_check.outputs.exists == 'false'
        shell: bash
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A --force dist
          if git diff --cached --quiet; then
            echo "No changes in dist to commit"
          else
            git commit -m "chore(release): build dist for v${{ steps.get_version.outputs.version }} [skip ci]"
            git push origin HEAD:main
          fi

      - name: Create and push tag
        if: steps.tag_check.outputs.exists == 'false'
        run: |
          git tag -a "v${{ steps.get_version.outputs.version }}" -m "v${{ steps.get_version.outputs.version }}"
          git push origin "v${{ steps.get_version.outputs.version }}"

      - name: Create GitHub Release
        if: steps.tag_check.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: v${{ steps.get_version.outputs.version }}
          generate_release_notes: true
